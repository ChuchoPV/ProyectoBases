{"ast":null,"code":"import _classCallCheck from \"/Users/jesusperea/Desktop/Bases Proyect/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jesusperea/Desktop/Bases Proyect/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jesusperea/Desktop/Bases Proyect/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jesusperea/Desktop/Bases Proyect/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jesusperea/Desktop/Bases Proyect/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jesusperea/Desktop/Bases Proyect/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jesusperea/Desktop/Bases Proyect/myapp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { ReadAlumnos } from './Alumno/render.jsx';\nimport { ReadMaterias } from './Materias/render.jsx'; // component that decides which main component to load: read or create/update\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      currentMode: null\n    };\n    _this.changeAppMode = _this.changeAppMode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // used when use clicks something that changes the current mode\n\n\n  _createClass(App, [{\n    key: \"changeAppMode\",\n    value: function changeAppMode(newMode) {\n      this.setState({\n        currentMode: newMode\n      });\n    } // render the component based on current or selected mode\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.changeAppMode('readAlumnos');\n        },\n        className: \"btn btn-primary margin-bottom-1em\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \" Mostrar Alumno\"), \"\\xA0\\xA0\\xA0\", React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.changeAppMode('readMaterias');\n        },\n        className: \"btn btn-primary margin-bottom-1em\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" Mostrar Actividades\"), this.state.currentMode === \"readAlumnos\" ? React.createElement(ReadAlumnos, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }) : null, this.state.currentMode === \"readMaterias\" ? React.createElement(ReadMaterias, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jesusperea/Desktop/Bases Proyect/myapp/src/App.js"],"names":["React","ReadAlumnos","ReadMaterias","App","props","state","currentMode","changeAppMode","bind","newMode","setState","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,QAA6B,uBAA7B,C,CAEA;;IACMC,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AALgB;AAMjB,G,CAED;;;;;kCACcC,O,EAAQ;AACpB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAEG;AADH,OAAd;AAGD,K,CAED;;;;6BACQ;AAAA;;AACJ,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACF,aAAL,CAAmB,aAAnB,CAAN;AAAA,SADb;AAEI,QAAA,SAAS,EAAC,mCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,kBAMI;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,aAAL,CAAmB,cAAnB,CAAN;AAAA,SADb;AAEI,QAAA,SAAS,EAAC,mCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANJ,EAYQ,KAAKF,KAAL,CAAWC,WAAX,KAA2B,aAA3B,GACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAEE,IAdV,EAkBQ,KAAKD,KAAL,CAAWC,WAAX,KAA2B,cAA3B,GACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAEE,IApBV,CADF;AA2BH;;;;EA7CeN,KAAK,CAACW,S;;AAiDxB,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { ReadAlumnos } from './Alumno/render.jsx';\nimport { ReadMaterias } from './Materias/render.jsx';\n\n// component that decides which main component to load: read or create/update\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      currentMode: null\n    }\n    this.changeAppMode = this.changeAppMode.bind(this);\n  }\n\n  // used when use clicks something that changes the current mode\n  changeAppMode(newMode){\n    this.setState({\n        currentMode: newMode\n    });\n  }\n\n  // render the component based on current or selected mode\n  render(){\n      return(\n        <div> \n            <button\n                onClick={() => this.changeAppMode('readAlumnos')}\n                className='btn btn-primary margin-bottom-1em'> Mostrar Alumno\n            </button>\n            &nbsp;&nbsp;&nbsp;\n            <button\n                onClick={() => this.changeAppMode('readMaterias')}\n                className='btn btn-primary margin-bottom-1em'> Mostrar Actividades\n            </button>\n\n            {\n                this.state.currentMode === \"readAlumnos\" ?\n                    <ReadAlumnos></ReadAlumnos>\n                : null\n            }\n     \n            {\n                this.state.currentMode === \"readMaterias\" ?\n                    <ReadMaterias></ReadMaterias>\n                : null\n            }\n\n        </div>\n      );\n\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}